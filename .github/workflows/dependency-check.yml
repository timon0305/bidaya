name: Dependency Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Mondays

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.32.8'

      - name: Install dependencies
        run: flutter pub get

      - name: Check for outdated dependencies
        run: |
          flutter pub outdated --json > outdated.json
          flutter pub outdated

      - name: Check for deprecated packages
        run: |
          echo "## Checking for deprecated packages..." > deprecated_report.txt
          flutter pub deps --json | jq '.packages[] | select(.deprecated == true)' >> deprecated_report.txt || true

      - name: Analyze dependency health
        run: |
          dart pub global activate pana
          echo "## Dependency Health Report" > dependency_health.txt
          for package in $(flutter pub deps --json | jq -r '.packages[].name' | sort -u); do
            echo "Analyzing $package..."
            dart pub global run pana --no-warning "$package" >> dependency_health.txt 2>&1 || true
          done

      - name: Check for unused dependencies
        run: |
          dart pub global activate dependency_validator
          dart pub global run dependency_validator || true

      - name: Check license compatibility
        run: |
          flutter pub deps --json | jq -r '.packages[] | "\(.name): \(.license // "UNKNOWN")"' > licenses.txt
          echo "## License Summary" >> licenses.txt
          cat licenses.txt

      - name: Create dependency update PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## Dependency Check Results\n\n';

            if (fs.existsSync('outdated.json')) {
              const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
              comment += '### Outdated Dependencies\n';
              comment += '```json\n' + JSON.stringify(outdated, null, 2) + '\n```\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload dependency reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            outdated.json
            deprecated_report.txt
            dependency_health.txt
            licenses.txt
